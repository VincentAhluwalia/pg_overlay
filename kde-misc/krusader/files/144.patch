From 32d374710dde26384ded91295346f4a56d17e71f Mon Sep 17 00:00:00 2001
From: Alexander Bikadorov <alex.bikadorov@kdemail.net>
Date: Mon, 5 Aug 2024 14:41:40 +0200
Subject: [PATCH 1/2] Panel: Fix crash when dropping on status bar

Bug exists since 2df3af6c3d7f61.

FIXED: [ 474596 ] Krusader always crashes after drag-n-drop several files on info bar
BUG: 474596
---
 app/Panel/krlayoutfactory.cpp | 4 +++-
 app/Panel/krlayoutfactory.h   | 2 +-
 app/Panel/listpanelframe.h    | 6 +++---
 3 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/app/Panel/krlayoutfactory.cpp b/app/Panel/krlayoutfactory.cpp
index b7eeced9c..bd318a98c 100644
--- a/app/Panel/krlayoutfactory.cpp
+++ b/app/Panel/krlayoutfactory.cpp
@@ -281,8 +281,10 @@ QWidget *KrLayoutFactory::createFrame(const QDomElement &e, QWidget *parent)
         frame->setLayout(l);
     }
 
+    const QPointer<ListPanel> panelPointer(panel); // 'this' is not a QObject, need to declare field as local variable for lambda
     QObject::connect(frame, &ListPanelFrame::dropped, panel, [=](QDropEvent *event) {
-        qobject_cast<ListPanel *>(panel)->handleDrop(event);
+        // handle drop on inner widgets without own drop handling (e.g. status bar) as drop to current directory
+        panelPointer->handleDrop(event);
     });
     if (!color.isEmpty())
         QObject::connect(panel, &ListPanel::signalRefreshColors, frame, &ListPanelFrame::refreshColors);
diff --git a/app/Panel/krlayoutfactory.h b/app/Panel/krlayoutfactory.h
index c910d438b..a5970c791 100644
--- a/app/Panel/krlayoutfactory.h
+++ b/app/Panel/krlayoutfactory.h
@@ -45,7 +45,7 @@ private:
     static void getLayoutNames(const QDomDocument &doc, QStringList &names);
     static QDomElement findLayout(const QDomDocument &doc, const QString &layoutName);
 
-    ListPanel *panel;
+    ListPanel *const panel;
     QHash<QString, QWidget *> &widgets;
 
     static bool _parsed;
diff --git a/app/Panel/listpanelframe.h b/app/Panel/listpanelframe.h
index 3e46239de..7287dc0e7 100644
--- a/app/Panel/listpanelframe.h
+++ b/app/Panel/listpanelframe.h
@@ -24,7 +24,7 @@ public:
     ListPanelFrame(QWidget *parent, const QString &color);
 
 signals:
-    void dropped(QDropEvent *, QWidget *); /**< emitted when someone drops URL onto the frame */
+    void dropped(QDropEvent *); /**< emitted when someone drops URL onto the frame */
 
 protected slots:
     void colorsChanged();
@@ -35,9 +35,9 @@ public slots:
 protected:
     QColor getColor(KConfigGroup &cg, const QString &name, const QColor &def, const QColor &kdedef);
 
-    void dropEvent(QDropEvent *e) override
+    void dropEvent(QDropEvent *event) override
     {
-        emit dropped(e, this);
+        emit dropped(event);
     }
     void dragEnterEvent(QDragEnterEvent *) override;
 
-- 
GitLab


From 84d1a79ca3c287e4afa9b5480400c759f4e80ffd Mon Sep 17 00:00:00 2001
From: Alexander Bikadorov <alex.bikadorov@kdemail.net>
Date: Fri, 9 Aug 2024 15:34:19 +0200
Subject: [PATCH 2/2] Panel: Fix wrong position of drop menu when dropping on
 status bar

---
 app/Panel/krlayoutfactory.cpp |  2 +-
 app/Panel/listpanel.cpp       | 10 ++++++----
 app/Panel/listpanel.h         |  2 +-
 3 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/app/Panel/krlayoutfactory.cpp b/app/Panel/krlayoutfactory.cpp
index bd318a98c..e82a23d52 100644
--- a/app/Panel/krlayoutfactory.cpp
+++ b/app/Panel/krlayoutfactory.cpp
@@ -284,7 +284,7 @@ QWidget *KrLayoutFactory::createFrame(const QDomElement &e, QWidget *parent)
     const QPointer<ListPanel> panelPointer(panel); // 'this' is not a QObject, need to declare field as local variable for lambda
     QObject::connect(frame, &ListPanelFrame::dropped, panel, [=](QDropEvent *event) {
         // handle drop on inner widgets without own drop handling (e.g. status bar) as drop to current directory
-        panelPointer->handleDrop(event);
+        panelPointer->handleDrop(event, frame);
     });
     if (!color.isEmpty())
         QObject::connect(panel, &ListPanel::signalRefreshColors, frame, &ListPanelFrame::refreshColors);
diff --git a/app/Panel/listpanel.cpp b/app/Panel/listpanel.cpp
index f72d07093..63576bd2c 100644
--- a/app/Panel/listpanel.cpp
+++ b/app/Panel/listpanel.cpp
@@ -478,7 +478,7 @@ void ListPanel::createView()
     connect(view->op(), &KrViewOperator::emptyContextMenu, this, &ListPanel::popEmptyRightClickMenu);
     connect(view->op(), &KrViewOperator::letsDrag, this, &ListPanel::startDragging);
     connect(view->op(), &KrViewOperator::gotDrop, this, [this](QDropEvent *event) {
-        handleDrop(event, true);
+        handleDrop(event);
     });
     connect(view->op(), &KrViewOperator::previewJobStarted, this, &ListPanel::slotPreviewJobStarted);
     connect(view->op(), &KrViewOperator::refreshActions, krApp->viewActions(), &ViewActions::refreshActions);
@@ -838,7 +838,7 @@ void ListPanel::updateFilesystemStats(const QString &metaInfo, const QString &fs
     mediaButton->updateIcon(mountPoint);
 }
 
-void ListPanel::handleDrop(QDropEvent *event, bool onView)
+void ListPanel::handleDrop(QDropEvent *event, QWidget *targetFrame)
 {
     // check what was dropped
     const QList<QUrl> urls = KUrlMimeData::urlsFromMimeData(event->mimeData());
@@ -850,7 +850,7 @@ void ListPanel::handleDrop(QDropEvent *event, bool onView)
     // find dropping destination
     QString destinationDir = "";
     const bool dragFromThisPanel = event->source() == this;
-    const KrViewItem *item = onView ? view->getKrViewItemAt(event->pos()) : nullptr;
+    const KrViewItem *item = !targetFrame ? view->getKrViewItemAt(event->pos()) : nullptr;
     if (item) {
         const FileItem *file = item->getFileItem();
         if (file && !file->isDir() && dragFromThisPanel) {
@@ -867,7 +867,9 @@ void ListPanel::handleDrop(QDropEvent *event, bool onView)
     QUrl destination = QUrl(virtualPath());
     destination.setPath(destination.path() + '/' + destinationDir);
 
-    func->files()->dropFiles(destination, event, view->widget());
+    QWidget *targetWidget = targetFrame ? targetFrame : view->widget();
+
+    func->files()->dropFiles(destination, event, targetWidget);
 
     if (KConfigGroup(krConfig, "Look&Feel").readEntry("UnselectBeforeOperation", _UnselectBeforeOperation)) {
         KrPanel *p = dragFromThisPanel ? this : otherPanel();
diff --git a/app/Panel/listpanel.h b/app/Panel/listpanel.h
index 961107066..bdb4218c1 100644
--- a/app/Panel/listpanel.h
+++ b/app/Panel/listpanel.h
@@ -127,7 +127,7 @@ public:
     };
 
 public slots:
-    void handleDrop(QDropEvent *event, bool onView = false); // handle drops on frame or view
+    void handleDrop(QDropEvent *event, QWidget *targetFrame = nullptr); // handle drops on frame or view
     void handleDrop(const QUrl &destination, QDropEvent *event); // handle drops with destination
     void popRightClickMenu(const QPoint &);
     void popEmptyRightClickMenu(const QPoint &);
-- 
GitLab


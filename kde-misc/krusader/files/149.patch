From 72684c21cfec83c41e62d2794d644bccfdf4b716 Mon Sep 17 00:00:00 2001
From: Alexander Bikadorov <alex.bikadorov@kdemail.net>
Date: Mon, 14 Oct 2024 16:31:01 +0200
Subject: [PATCH 1/3] Panel: Remove immediateOpenUrl() method

Not used since 5e522c49b.
---
 app/Panel/panelfunc.cpp | 19 +++++--------------
 app/Panel/panelfunc.h   |  3 +--
 2 files changed, 6 insertions(+), 16 deletions(-)

diff --git a/app/Panel/panelfunc.cpp b/app/Panel/panelfunc.cpp
index 718257b81..f0bf6936e 100644
--- a/app/Panel/panelfunc.cpp
+++ b/app/Panel/panelfunc.cpp
@@ -197,17 +197,12 @@ void ListPanelFunc::openUrl(const QUrl &url, const QString &nameToMakeCurrent, b
         QString relative = QDir(panel->virtualPath().path() + '/').relativeFilePath(url.path());
         syncURL.setPath(QDir::cleanPath(syncURL.path() + '/' + relative));
         panel->otherPanel()->gui->setTabState(ListPanel::TabState::DEFAULT);
-        otherFunc()->openUrlInternal(syncURL, nameToMakeCurrent, false, false);
+        otherFunc()->openUrlInternal(syncURL, nameToMakeCurrent, false);
     }
-    openUrlInternal(url, nameToMakeCurrent, false, manuallyEntered);
+    openUrlInternal(url, nameToMakeCurrent, manuallyEntered);
 }
 
-void ListPanelFunc::immediateOpenUrl(const QUrl &url)
-{
-    openUrlInternal(url, QString(), true, false);
-}
-
-void ListPanelFunc::openUrlInternal(const QUrl &url, const QString &nameToMakeCurrent, bool immediately, bool manuallyEntered)
+void ListPanelFunc::openUrlInternal(const QUrl &url, const QString &nameToMakeCurrent, const bool manuallyEntered)
 {
     const QUrl cleanUrl = cleanPath(url);
 
@@ -219,15 +214,11 @@ void ListPanelFunc::openUrlInternal(const QUrl &url, const QString &nameToMakeCu
 
     urlManuallyEntered = manuallyEntered;
 
-    const QString currentItem = history->currentUrl().path() == cleanUrl.path() ? history->currentItem() : nameToMakeCurrent;
-
     panel->view->setNameToMakeCurrent(nameToMakeCurrent);
+    const QString currentItem = history->currentUrl().path() == cleanUrl.path() ? history->currentItem() : nameToMakeCurrent;
     history->add(cleanUrl, currentItem);
 
-    if (immediately)
-        doRefresh();
-    else
-        refresh();
+    refresh();
 }
 
 void ListPanelFunc::refresh()
diff --git a/app/Panel/panelfunc.h b/app/Panel/panelfunc.h
index 4e435172a..57bdba70a 100644
--- a/app/Panel/panelfunc.h
+++ b/app/Panel/panelfunc.h
@@ -146,8 +146,7 @@ protected:
     bool isSyncing(const QUrl &url);
     // when externallyExecutable == true, the file can be executed or opened with other software
     void openFileNameInternal(const QString &name, bool externallyExecutable);
-    void immediateOpenUrl(const QUrl &url);
-    void openUrlInternal(const QUrl &url, const QString &makeCurrent, bool immediately, bool manuallyEntered);
+    void openUrlInternal(const QUrl &url, const QString &nameToMakeCurrent, bool manuallyEntered);
     void runCommand(const QString &cmd);
 
     ListPanel *panel; // our ListPanel
-- 
GitLab


From 441c6b9c191a6bbe7a4fb5cbbbac981f8939a204 Mon Sep 17 00:00:00 2001
From: Alexander Bikadorov <alex.bikadorov@kdemail.net>
Date: Mon, 14 Oct 2024 17:29:34 +0200
Subject: [PATCH 2/3] Panel: Fix history actions ignoring sync-browse mode

FIXED: [ 480319 ] "Synchronized browsing mode" between panels ignored when user uses "Back" or "Forward" button
BUG: 480319
---
 app/Panel/dirhistoryqueue.cpp | 10 +++++-----
 app/Panel/dirhistoryqueue.h   |  6 +++---
 app/Panel/panelfunc.cpp       | 28 +++++++++++++++-------------
 app/Panel/panelfunc.h         |  2 +-
 4 files changed, 24 insertions(+), 22 deletions(-)

diff --git a/app/Panel/dirhistoryqueue.cpp b/app/Panel/dirhistoryqueue.cpp
index cb93fd5bd..3954b81ea 100644
--- a/app/Panel/dirhistoryqueue.cpp
+++ b/app/Panel/dirhistoryqueue.cpp
@@ -96,22 +96,22 @@ void DirHistoryQueue::add(QUrl url, const QString &currentItem)
     _currentItems.push_front(currentItem);
 }
 
-bool DirHistoryQueue::gotoPos(int pos)
+QUrl DirHistoryQueue::gotoPos(int pos)
 {
     if (pos >= 0 && pos < _urlQueue.count()) {
         saveCurrentItem();
         _currentPos = pos;
-        return true;
+        return currentUrl();
     }
-    return false;
+    return QUrl();
 }
 
-bool DirHistoryQueue::goBack()
+QUrl DirHistoryQueue::goBack()
 {
     return gotoPos(_currentPos + 1);
 }
 
-bool DirHistoryQueue::goForward()
+QUrl DirHistoryQueue::goForward()
 {
     return gotoPos(_currentPos - 1);
 }
diff --git a/app/Panel/dirhistoryqueue.h b/app/Panel/dirhistoryqueue.h
index a03c57231..ad4c8687a 100644
--- a/app/Panel/dirhistoryqueue.h
+++ b/app/Panel/dirhistoryqueue.h
@@ -42,9 +42,9 @@ public:
         return _urlQueue[pos];
     }
     void add(QUrl url, const QString &currentItem);
-    bool gotoPos(int pos);
-    bool goBack();
-    bool goForward();
+    QUrl gotoPos(int pos);
+    QUrl goBack();
+    QUrl goForward();
     bool canGoBack()
     {
         return _currentPos < count() - 1;
diff --git a/app/Panel/panelfunc.cpp b/app/Panel/panelfunc.cpp
index f0bf6936e..79a767aaa 100644
--- a/app/Panel/panelfunc.cpp
+++ b/app/Panel/panelfunc.cpp
@@ -108,11 +108,10 @@ ListPanelFunc::~ListPanelFunc()
 
 bool ListPanelFunc::isSyncing(const QUrl &url)
 {
-    if (otherFunc()->otherFunc() == this && panel->otherPanel()->gui->syncBrowseButton->isChecked() && !otherFunc()->syncURL.isEmpty()
-        && otherFunc()->syncURL == url)
-        return true;
-
-    return false;
+    return otherFunc()->otherFunc() == this //
+        && panel->otherPanel()->gui->syncBrowseButton->isChecked() //
+        && !otherFunc()->syncURL.isEmpty() //
+        && otherFunc()->syncURL == url;
 }
 
 void ListPanelFunc::openFileNameInternal(const QString &name, bool externallyExecutable)
@@ -186,9 +185,9 @@ QUrl ListPanelFunc::cleanPath(const QUrl &urlIn)
     return url;
 }
 
-void ListPanelFunc::openUrl(const QUrl &url, const QString &nameToMakeCurrent, bool manuallyEntered)
+void ListPanelFunc::openUrl(const QUrl &url, const QString &nameToMakeCurrent, const bool manuallyEntered)
 {
-    qDebug() << "URL=" << url.toDisplayString() << "; name to current=" << nameToMakeCurrent;
+    qDebug() << "URL=" << url.toDisplayString() << "; nameToMakeCurrent=" << nameToMakeCurrent;
     if (panel->syncBrowseButton->isChecked()) {
         // do sync-browse stuff....
         if (syncURL.isEmpty())
@@ -1361,20 +1360,23 @@ ListPanelFunc *ListPanelFunc::otherFunc()
 
 void ListPanelFunc::historyGotoPos(int pos)
 {
-    if (history->gotoPos(pos))
-        refresh();
+    const QUrl url = history->gotoPos(pos);
+    if (url.isValid())
+        openUrl(url, history->currentItem());
 }
 
 void ListPanelFunc::historyBackward()
 {
-    if (history->goBack())
-        refresh();
+    const QUrl url = history->goBack();
+    if (url.isValid())
+        openUrl(url, history->currentItem());
 }
 
 void ListPanelFunc::historyForward()
 {
-    if (history->goForward())
-        refresh();
+    const QUrl url = history->goForward();
+    if (url.isValid())
+        openUrl(url, history->currentItem());
 }
 
 void ListPanelFunc::dirUp()
diff --git a/app/Panel/panelfunc.h b/app/Panel/panelfunc.h
index 57bdba70a..37f5016d9 100644
--- a/app/Panel/panelfunc.h
+++ b/app/Panel/panelfunc.h
@@ -35,7 +35,7 @@ class ListPanelFunc : public QObject
 public slots:
     void execute(const QString &);
     void goInside(const QString &);
-    void openUrl(const QUrl &path, const QString &nameToMakeCurrent = QString(), bool manuallyEntered = false);
+    void openUrl(const QUrl &url, const QString &nameToMakeCurrent = QString(), bool manuallyEntered = false);
     void rename(const QString &oldname, const QString &newname);
 
     // actions
-- 
GitLab


From c6b7a77737ff9c99e7c62379763696ba4f6ea6c1 Mon Sep 17 00:00:00 2001
From: Alexander Bikadorov <alex.bikadorov@kdemail.net>
Date: Mon, 14 Oct 2024 17:59:18 +0200
Subject: [PATCH 3/3] Panel: Remove setting NameToMakeCurrent before refresh

Seems to be useless because it is also set during refresh.
---
 app/Panel/panelfunc.cpp | 1 -
 1 file changed, 1 deletion(-)

diff --git a/app/Panel/panelfunc.cpp b/app/Panel/panelfunc.cpp
index 79a767aaa..0a87ddd80 100644
--- a/app/Panel/panelfunc.cpp
+++ b/app/Panel/panelfunc.cpp
@@ -213,7 +213,6 @@ void ListPanelFunc::openUrlInternal(const QUrl &url, const QString &nameToMakeCu
 
     urlManuallyEntered = manuallyEntered;
 
-    panel->view->setNameToMakeCurrent(nameToMakeCurrent);
     const QString currentItem = history->currentUrl().path() == cleanUrl.path() ? history->currentItem() : nameToMakeCurrent;
     history->add(cleanUrl, currentItem);
 
-- 
GitLab


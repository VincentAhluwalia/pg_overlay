--- a/wscript	2017-10-31 15:27:25.100037571 +0700
+++ b/wscript	2017-10-31 18:27:30.565209860 +0700
@@ -425,27 +425,31 @@
     }
 ]
 
+ffmpeg_version = "3.2.2"
 ffmpeg_pkg_config_checks = [
-    'libavutil',     '>= 56.0.100',
-    'libavcodec',    '>= 58.2.100',
-    'libavformat',   '>= 58.0.102',
-    'libswscale',    '>= 5.0.101',
-    'libavfilter',   '>= 7.0.101',
-    'libswresample', '>= 3.0.100',
+    'libavutil',     '>= 55.34.100',
+    'libavcodec',    '>= 57.64.100',
+    'libavformat',   '>= 57.56.100',
+    'libswscale',    '>= 4.2.100',
+    'libavfilter',   '>= 6.65.100',
+    'libswresample', '>= 2.3.100',
 ]
+libav_version = "12"
 libav_pkg_config_checks = [
-    'libavutil',     '>= 56.6.0',
-    'libavcodec',    '>= 58.5.0',
-    'libavformat',   '>= 58.1.0',
-    'libswscale',    '>= 5.0.0',
-    'libavfilter',   '>= 7.0.0',
-    'libavresample', '>= 4.0.0',
+    'libavutil',     '>= 55.20.0',
+    'libavcodec',    '>= 57.25.0',
+    'libavformat',   '>= 57.7.0',
+    'libswscale',    '>= 4.0.0',
+    'libavfilter',   '>= 6.7.0',
+    'libavresample', '>= 3.0.0',
 ]
 
+libav_versions_string = "FFmpeg %s or Libav %s" % (ffmpeg_version, libav_version)
+
 def check_ffmpeg_or_libav_versions():
     def fn(ctx, dependency_identifier, **kw):
         versions = ffmpeg_pkg_config_checks
-        if ctx.dependency_satisfied('libav'):
+        if ctx.dependency_satisfied('is_libav'):
             versions = libav_pkg_config_checks
         return check_pkg_config(*versions)(ctx, dependency_identifier, **kw)
     return fn
@@ -458,15 +462,8 @@
         'req': True,
         'fmsg': "FFmpeg/Libav development files not found.",
     }, {
-        'name': 'ffmpeg_mpv',
-        'desc': 'libav* is FFmpeg mpv modified version',
-        'func': check_statement('libavcodec/version.h',
-                                'int x[LIBAVCODEC_MPV ? 1 : -1]',
-                                use='libavcodec')
-    }, {
-        'name': 'ffmpeg_garbage',
-        'deps': '!ffmpeg_mpv',
-        'desc': 'libav* is upstream FFmpeg (unsupported)',
+        'name': 'is_ffmpeg',
+        'desc': 'libav* is FFmpeg',
         # FFmpeg <=> LIBAVUTIL_VERSION_MICRO>=100
         'func': check_statement('libavcodec/version.h',
                                 'int x[LIBAVCODEC_VERSION_MICRO >= 100 ? 1 : -1]',
@@ -475,25 +472,23 @@
         # This check should always result in the opposite of is_ffmpeg.
         # Run it to make sure is_ffmpeg didn't fail for some other reason than
         # the actual version check.
-        'name': 'libav',
+        'name': 'is_libav',
         'desc': 'libav* is Libav',
         # FFmpeg <=> LIBAVUTIL_VERSION_MICRO>=100
         'func': check_statement('libavcodec/version.h',
                                 'int x[LIBAVCODEC_VERSION_MICRO >= 100 ? -1 : 1]',
                                 use='libavcodec')
     }, {
-        'name': 'libav-any',
+        'name': 'libav',
         'desc': 'Libav/FFmpeg library versions',
-        'deps': 'ffmpeg_mpv || libav',
+        'deps': 'is_ffmpeg || is_libav',
         'func': check_ffmpeg_or_libav_versions(),
         'req': True,
         'fmsg': "Unable to find development files for some of the required \
-FFmpeg/Libav libraries. You need git master. For FFmpeg, the mpv fork, that \
-might contain additional fixes and features is required. It is available on \
-https://github.com/mpv-player/ffmpeg-mpv Aborting."
+FFmpeg/Libav libraries. You need at least {0}. Aborting.".format(libav_versions_string)
     }, {


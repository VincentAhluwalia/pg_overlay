--- a/ui/gfx/linux/client_native_pixmap_dmabuf.cc	2017-07-26 02:05:19.000000000 +0700
+++ b//ui/gfx/linux/client_native_pixmap_dmabuf.cc_new	2017-08-01 15:21:44.000000000 +0700
@@ -91,18 +91,10 @@
     // associated crash keys once crbug.com/629521 is fixed.
     bool fd_valid = fcntl(dmabuf_fd_.get(), F_GETFD) != -1 ||
                     logging::GetLastSystemErrorCode() != EBADF;
-    int minor = -1;
-    int major = -1;
-    struct stat buf;
-    if (!fstat(dmabuf_fd_.get(), &buf)) {
-      minor = minor(buf.st_dev);
-      major = major(buf.st_dev);
-    }
-
     std::string mmap_params = base::StringPrintf(
         "(addr=nullptr, length=%zu, prot=(PROT_READ | PROT_WRITE), "
-        "flags=MAP_SHARED, fd=%d[valid=%d, minor=%d, major=%d], offset=0)",
-        map_size, dmabuf_fd_.get(), fd_valid, minor, major);
+        "flags=MAP_SHARED, fd=%d[valid=%d], offset=0)",
+        map_size, dmabuf_fd_.get(), fd_valid);
     std::string errno_str = logging::SystemErrorCodeToString(mmap_error);
     std::unique_ptr<base::ProcessMetrics> process_metrics(
         base::ProcessMetrics::CreateCurrentProcessMetrics());
@@ -117,13 +109,6 @@
                << ", buffer_size: (" << size.ToString()
                << "),  errno: " << errno_str
                << " , number_of_fds: " << number_of_fds;
-    LOG(ERROR) << "NativePixmapHandle:";
-    LOG(ERROR) << "Number of fds: " << handle.fds.size();
-    LOG(ERROR) << "Number of planes: " << handle.planes.size();
-    for (const auto& plane : handle.planes) {
-      LOG(ERROR) << "stride  " << plane.stride << " offset " << plane.offset
-                 << " size " << plane.size;
-    }
     CHECK(false) << "Failed to mmap dmabuf.";
   }
 }

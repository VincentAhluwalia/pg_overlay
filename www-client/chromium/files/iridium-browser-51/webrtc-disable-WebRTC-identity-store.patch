From f5c758f179920489051fb0de3ce8494f79412105 Mon Sep 17 00:00:00 2001
From: Joachim Bauch <jojo@struktur.de>
Date: Mon, 10 Nov 2014 10:54:29 +0100
Subject: [PATCH 02/55] webrtc: disable WebRTC identity store

By default, WebRTC identities (i.e. keypairs/certificates) are cached
for 30 days and stored in a SQLite database in the users home
directory:

$ sqlite3 ~/.config/iridium/Default/WebRTCIdentityStore
sqlite> select origin, identity_name, common_name,
        quote(certificate), quote(private_key),
        creation_time from webrtc_identity_store;

With this change, a new identity is created for every WebRTC
connection.
---
 content/browser/media/webrtc/webrtc_identity_store.cc | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/content/browser/media/webrtc/webrtc_identity_store.cc b/content/browser/media/webrtc/webrtc_identity_store.cc
index 0dc62e4..3e78f77 100644
--- a/content/browser/media/webrtc/webrtc_identity_store.cc
+++ b/content/browser/media/webrtc/webrtc_identity_store.cc
@@ -86,7 +86,7 @@ class WebRTCIdentityRequest {
       : origin_(origin),
         identity_name_(identity_name),
         common_name_(common_name),
-        enable_cache_(enable_cache) {}
+        enable_cache_(false) {}
 
   void Cancel(WebRTCIdentityRequestHandle* handle) {
     DCHECK_CURRENTLY_ON(BrowserThread::IO);
@@ -194,6 +194,7 @@ base::Closure WebRTCIdentityStore::RequestIdentity(
     const CompletionCallback& callback,
     bool enable_cache) {
   DCHECK_CURRENTLY_ON(BrowserThread::IO);
+  enable_cache = false;
   WebRTCIdentityRequest* request =
       FindRequest(origin, identity_name, common_name);
   // If there is no identical request in flight, create a new one, queue it,
@@ -267,6 +268,8 @@ void WebRTCIdentityStore::GenerateIdentityCallback(
     WebRTCIdentityRequest* request,
     WebRTCIdentityRequestResult* result) {
   DCHECK_CURRENTLY_ON(BrowserThread::IO);
+  if (result->error == net::OK)
+  	DVLOG(2) << "New identity generated.";
   if (result->error == net::OK && request->enable_cache()) {
     DVLOG(2) << "New identity generated and added to the backend.";
     backend_->AddIdentity(request->origin_,
-- 
2.6.6


diff -up firefox-84.0/dom/media/gmp/GMPSharedMemManager.h.1663844 firefox-84.0/dom/media/gmp/GMPSharedMemManager.h
--- firefox-84.0/dom/media/gmp/GMPSharedMemManager.h.1663844	2020-12-07 23:32:59.000000000 +0100
+++ firefox-84.0/dom/media/gmp/GMPSharedMemManager.h	2020-12-10 12:59:39.287832851 +0100
@@ -27,7 +27,7 @@ class GMPSharedMem {
   // returned to the parent pool (which is not included).  If more than
   // this are needed, we presume the client has either crashed or hung
   // (perhaps temporarily).
-  static const uint32_t kGMPBufLimit = 20;
+  static const uint32_t kGMPBufLimit = 40;
 
   GMPSharedMem() {
     for (size_t i = 0; i < sizeof(mGmpAllocated) / sizeof(mGmpAllocated[0]);
diff -up firefox-84.0/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp.1663844 firefox-84.0/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp
--- firefox-84.0/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp.1663844	2020-12-10 12:59:39.287832851 +0100
+++ firefox-84.0/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp	2020-12-10 14:05:00.833685947 +0100
@@ -82,7 +82,7 @@ bool GMPDecoderModule::SupportsMimeType(
 
 bool GMPDecoderModule::SupportsMimeType(
     const nsACString& aMimeType, DecoderDoctorDiagnostics* aDiagnostics) const {
-  return false;
+  return MP4Decoder::IsH264(aMimeType);
 }
 
 /* static */
diff -up firefox-84.0/dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp.1663844 firefox-84.0/dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp
--- firefox-84.0/dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp.1663844	2020-12-08 00:35:04.000000000 +0100
+++ firefox-84.0/dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp	2020-12-10 12:59:39.287832851 +0100
@@ -67,6 +67,8 @@ void GMPVideoDecoder::Decoded(GMPVideoi4
   RefPtr<GMPVideoDecoder> self = this;
   if (v) {
     mDecodedData.AppendElement(std::move(v));
+    mDecodePromise.ResolveIfExists(std::move(mDecodedData), __func__);
+    mDecodedData = DecodedData();
   } else {
     mDecodedData.Clear();
     mDecodePromise.RejectIfExists(

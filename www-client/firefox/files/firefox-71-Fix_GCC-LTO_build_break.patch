
# HG changeset patch
# User David Major <dmajor@mozilla.com>
# Date 1575903148 0
# Node ID 360910f1a154225a82a16dcd58a94b99b65d8481
# Parent  25027937890b37008a9cc9d6141254c25addab6f
Bug 1602355 - Fix GCC LTO build break r=froydnj

GCC doesn't understand the `import-instr-limit` option.

Differential Revision: https://phabricator.services.mozilla.com/D56366

diff --git a/build/moz.configure/lto-pgo.configure b/build/moz.configure/lto-pgo.configure
--- a/build/moz.configure/lto-pgo.configure
+++ b/build/moz.configure/lto-pgo.configure
@@ -243,17 +243,17 @@ def lto(value, c_compiler, ld64_known_go
         # Tell LTO not to inline functions above a certain size, to mitigate
         # binary size growth while still getting good performance.
         # (For hot functions, PGO will put a multiplier on this limit.)
         if target.os == 'WINNT':
             ldflags.append('-mllvm:-import-instr-limit=10');
         elif target.os == 'OSX':
             # Until OSX gets PGO, too small of a limit will cause slowdowns.
             ldflags.append('-Wl,-mllvm,-import-instr-limit=40');
-        else:
+        elif c_compiler.type == 'clang':
             ldflags.append('-Wl,-plugin-opt=-import-instr-limit=10');
 
     return namespace(
         enabled=enabled,
         cflags=cflags,
         ldflags=ldflags,
         rust_lto=rust_lto,
     )

